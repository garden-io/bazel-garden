---
kind: Module
type: exec
local: true
name: python-web-image
description: Build docker image
include:
  - ./*
build:
  command: ["bazel", "run", "//projects/python_web:python_web_image", "--", "--norun"]
tests:
  - name: python-web-test
    command: ["bazel", "test", "//projects/python_web:python_web_test"]

---
kind: Module
type: exec
local: true
name: python-web-tag-image
include: []
description: Tag docker image
build:
  dependencies:
    - name: python-web-image
tasks:
  - name: re-tag-image
    command: ["docker", "tag", "bazel/projects/python_web:python_web_image", "python_web:${modules.python-web-image.version}"]

---
kind: Module
name: python-web
type: kubernetes
include: []
build:
  dependencies:
    - python-web-image
dependencies:
  - re-tag-image
serviceResource:
  kind: Deployment
  name: python-web
manifests:
# Ingress
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: python-web
    spec:
      ingressClassName: nginx
      rules:
      - host: python-web.local.app.garden
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: python-web
                port:
                  number: 80
# Service
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        module: python-web
        service: python-web
      name: python-web
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
      selector:
        app: python-web
      sessionAffinity: None
      type: ClusterIP
# Deployment
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: python-web
      labels:
        app: python-web
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: python-web
      template:
        metadata:
          labels:
            app: python-web
        spec:
          containers:
            - name: python-web
              image: "python_web:${modules.python-web-image.version}"
              imagePullPolicy: IfNotPresent
              ports:
                - name: http
                  containerPort: 5000
                  protocol: TCP
              resources:
                requests:
                  cpu: 250m
                  memory: 512Mi
                limits:
                  cpu: 500m
                  memory: 1G
tests:
  - name: python-web-unit
    dependencies:
      - re-tag-image
    command:
      - /bin/sh
      - '-c'
    args:
      - echo
      - ok

## devMode doesn't work as expected
#  ⚠ python-web                → Error scanning sync target, path python_web_image.binary: invalid symbolic link: target is absolute
#  ⚠ python-web                → Error scanning sync target, path python_web_image.binary.runfiles/__main__/external: invalid symbolic link: target is absolute

# devMode:
#   command: ["/usr/bin/python", "/app/projects/python_web/python_web_image.binary"]
#   sync:
#     - source: ../../bazel-bin/projects/python_web/python_web.runfiles
#       target: /app/projects/python_web/
