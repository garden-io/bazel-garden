load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_python",
    sha256 = "b593d13bb43c94ce94b483c2858e53a9b811f6f10e1e0eedc61073bd90e58d9c",
    strip_prefix = "rules_python-0.12.0",
    url = "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.12.0.tar.gz",
)

http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf",
    urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.25.0/rules_docker-v0.25.0.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_go",
    sha256 = "099a9fb96a376ccbbb7d291ed4ecbdfd42f6bc822ab77ae6f1b5cb9e914e94fa",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.35.0/rules_go-v0.35.0.zip",
        "https://github.com/bazelbuild/rules_go/releases/download/v0.35.0/rules_go-v0.35.0.zip",
    ],
)

http_archive(
    name = "bazel_gazelle",
    sha256 = "efbbba6ac1a4fd342d5122cbdfdb82aeb2cf2862e35022c752eaddffada7c3f3",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.27.0/bazel-gazelle-v0.27.0.tar.gz",
        "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.27.0/bazel-gazelle-v0.27.0.tar.gz",
    ],
)

### Python Setup
load("@rules_python//python:pip.bzl", "pip_install")

pip_install(
    name = "pip",
    requirements = "//third_party:requirements.txt",
)

### Golang Setup
load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
load("//:go_deps.bzl", "go_dependencies")

# gazelle:repository_macro go_deps.bzl%go_dependencies
go_dependencies()

go_rules_dependencies()

go_register_toolchains(version = "1.18")

gazelle_dependencies(go_repository_default_config = "@//:WORKSPACE.bazel")

### Docker Setup
load("@io_bazel_rules_docker//repositories:repositories.bzl", container_repositories = "repositories")

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

### Loading base docker images
load("@io_bazel_rules_docker//python3:image.bzl", _py_image_repos = "repositories")

_py_image_repos()

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

container_pull(
    name = "debian_base",
    # docker manifest inspect index.docker.io/debian:bullseye
    digest = "sha256:c11d2593cb741ae8a36d0de9cd240d13518e95f50bccfa8d00a668c006db181e",
    registry = "index.docker.io",
    repository = "library/debian",
)

# http_archive(
#     name = "com_github_google_rules_install",
#     urls = ["https://github.com/google/bazel_rules_install/releases/download/0.3/bazel_rules_install-0.3.tar.gz"],
#     sha256 = "ea2a9f94fed090859589ac851af3a1c6034c5f333804f044f8f094257c33bdb3",
#     strip_prefix = "bazel_rules_install-0.3",
# )

# load("@com_github_google_rules_install//:deps.bzl", "install_rules_dependencies")

# install_rules_dependencies()

# load("@com_github_google_rules_install//:setup.bzl", "install_rules_setup")

# install_rules_setup()


### Custom rule

# def _local_deploy_impl(ctx):
#     target = ctx.attr.target
#     shell_commands = ""

#     for s in ctx.files.srcs:
#         shell_commands += "echo Copying %s to %s\n" % (s.short_path, target)
#         shell_commands += "sudo cp %s %s\n" % (s.short_path, target)

#     ctx.actions.write(
#         output = ctx.outputs.executable,
#         is_executable = True,
#         content = shell_commands,
#     )
#     runfiles = ctx.runfiles(files = ctx.files.srcs)
#     return DefaultInfo(
#         executable = ctx.outputs.executable,
#         runfiles = runfiles,
#     )

# local_deploy = rule(
#     executable = True,
#     implementation = _local_deploy_impl,
#     attrs = {
#         "srcs": attr.label_list(allow_files = True),
#         "target": attr.string(default = "/usr/local/bin", doc = "Deployment target directory"),
#     },
# )
